'\" t
.\"     Title: kerrighed_capabilities
.\"    Author: [see the "Author" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 06/07/2010
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "KERRIGHED_CAPABILITI" "7" "06/07/2010" "[FIXME: source]" "[FIXME: manual]"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
kerrighed_capabilities \- overview of Kerrighed capabilities
.SH "DESCRIPTION"
.PP
Kerrighed provides a (as yet incomplete) system of
\fIcapabilities\fR, which allows administrator and users to define the way their processes behave in term of SSI mechanisms\&. Kerrighed cluster wide mechanisms are divided into distinct units that can be independently enabled and disabled\&.
.SS "Capabilities List"
.PP
The following capabilities are implemented:
.PP
CAP_CHANGE_KERRIGHED_CAP
.RS 4
Allow changing capabilities\&.
.RE
.PP
CAP_CAN_MIGRATE
.RS 4
Allow process to migrate\&.
.RE
.PP
CAP_DISTANT_FORK
.RS 4
This capability is used by the fork system call to decide if it should try to fork the new program on a distant node\&. Success of this operation is not guarantied\&.
.RE
.PP
CAP_SEE_LOCAL_PROC_STAT
.RS 4
Allow seeing
/proc
files of the local node instead of the globalized /proc of the cluster\&.
.RE
.SS "Process Capabilities"
.PP
Each process has four capability sets containing zero or more of the above capabilities:
.PP
Effective:
.RS 4
the capabilities used by the kernel to perform permission checks for the process\&.
.RE
.PP
Permitted:
.RS 4
the capabilities that the process may assume (i\&.e\&., a limiting superset for the the effective, inheritable and inheritable effective sets)\&. If a process drops a capability from its permitted set, it can never re\-acquire that capability (unless it execs a set\-UID\-root program)\&.
.RE
.PP
Inheritable Permited:
.RS 4
the capabilities preserved across an
\fBexecve\fR(2)\&.
.RE
.PP
Inheritable Effective:
.RS 4
the capabilities preserved across an
\fBexecve\fR(2)\&.
.RE
.SS "Capabilities Transmission"
.PP
During a fork, the kernel calculates the new capabilities of the process using the following algorithm:
.sp
.if n \{\
.RS 4
.\}
.nf
	  P\*(Aq(permitted) = (P(inheritable permitted) & F(allowed)) | F(forced)P\*(Aq(effective) = P(inheritable effective) & F(effective) & P\*(Aq(permitted)P\*(Aq(inheritable permitted) = P(inherited permitted)     [i\&.e\&., unchanged]P\*(Aq(inheritable effective) = P(inheritable effective)   [i\&.e\&., unchanged]
	
.fi
.if n \{\
.RE
.\}
.sp
where:
.PP
P
.RS 4
denotes the value of a process capability set before the exec
.RE
.PP
P\*(Aq
.RS 4
denotes the value of a capability set after the exec
.RE
.PP
F
.RS 4
denotes a file capability set
.RE
.SH "AUTHOR"
.PP
Renaud Lottiaux
renaud\&.lottiaux@kerlabs\&.com
.SH "SEE ALSO"
.PP

\m[blue]\fB\fBkrgcapset\fR(1)\fR\m[]
